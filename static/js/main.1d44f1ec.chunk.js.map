{"version":3,"sources":["hooks/usePersistentState.ts","contexts/fdcApiKey.tsx","data/models.ts","data/fdc/food.ts","components/Meal.tsx","components/primitives/Page.ts","contexts/meals.tsx","pages/Meals.tsx","pages/Navigation.tsx","components/primitives/Button.ts","components/primitives/Input.ts","components/primitives/Modal.tsx","data/fdc/types.ts","components/AddToMeal.tsx","helpers.ts","components/primitives/LinkButton.ts","components/Food.tsx","contexts/starred.tsx","data/fdc/search.ts","hooks/useDebounce.ts","components/StarButton.tsx","styles.ts","pages/Search.tsx","pages/Starred.tsx","pages/Settings.tsx","pages/TopBar.tsx","pages/Debug.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","config/swr.tsx","contexts/alerts.tsx","index.tsx"],"names":["usePersistentState","key","defaultValue","memoDefaultValue","useMemo","raw","localStorage","getItem","initialState","JSON","parse","useState","state","setState","useEffect","useCallback","value","setItem","stringify","default_key","FdcApiContext","React","createContext","setKey","FdcApiKeyProvider","props","Provider","searchNutrientToHealthyNutrient","nutrient","name","nutrientName","id","nutrientId","unit","unitName","group","searchFoodToHealthyFood","food","description","brand","brandOwner","fdcId","nutrients","foodNutrients","map","filter","nutrientsWeCareAbout","sort","nutrientOrder","foodNutrientToHealthyNutrient","amount","find","n","foodResultToHealthyFood","nutrientNames","includes","a","b","indexOf","fdcName","Object","values","getKey","API_KEY","getFoodOrUndefined","data","getErrorOrUndefined","useFood","useContext","useSWR","error","apiError","isLoading","Morsel","morsel","toString","MorselList","styled","ul","Meal","meal","foods","ids","keys","partial","useSWRInfinite","index","responses","setSize","length","compact","errors","useFoods","accumulatedNutrients","reduce","sum","first","groups","groupBy","date","groupKey","Fragment","Math","round","Page","main","attrs","MealsContext","meals","setMeals","MealsProvider","IndexControls","div","Meals","sortedMeals","orderBy","setIndex","hasPrevious","hasNext","onClick","disabled","Nav","nav","StyledLink","Link","Button","button","Input","input","BaseModal","setAppElement","DataType","StyledModal","Header","Heading","h1","Body","Modal","isOpen","onClose","title","children","onRequestClose","contentLabel","Step","AddToMeal","onDone","setAmount","moment","format","setDate","reset","alert","useAlert","addFoodToMeal","array","existingMealIndex","findIndex","newFood","console","log","existingMeal","assign","onSubmit","e","preventDefault","success","type","onChange","target","Number","AddToMealModal","LinkButton","Container","FirstRow","Details","Actions","Food","actions","StarredContext","starred","setStarred","StarredProvider","useSearch","query","dataTypes","trim","encodeURIComponent","join","StyledStarButton","StarButton","isStarred","setIsStarred","toggle","aria-label","aria-pressed","ColorRoles","primary","onPrimary","secondary","onSecondary","Color","surface","onSurface","critical","onCritical","warning","onWarning","onSuccess","highlight","interactive","onInteractive","actionPrimary","border","SearchBar","SearchResults","Sources","BaseFood","Search","setQuery","debouncedQuery","timeout","handler","setTimeout","clearTimeout","useDebounce","FOUNDATION","setDataTypes","selectDataType","dataType","uniq","unselectDataType","without","selectedFood","setSelectedFood","isModalOpen","setIsModalOpen","undefined","placeholder","style","marginRight","defaultChecked","checked","Item","loading","Starred","ApiStatus","span","Settings","isValid","Boolean","isInvalid","htmlFor","data-status","StyledTopBar","TopBar","to","Debug","process","SkipMain","Navigation","TopAndMain","App","href","path","exact","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","fetcher","resource","init","fetch","res","json","SWRProvider","refreshInterval","revalidateOnFocus","dedupingInterval","options","position","positions","BOTTOM_CENTER","offset","transition","transitions","SCALE","AlertProvider","template","AlertTemplate","ReactDOM","render","StrictMode","basename","document","getElementById","URL","origin","addEventListener","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.1d44f1ec.chunk.js","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from \"react\";\n\nexport const usePersistentState = <T>(key: string, defaultValue: T) => {\n  // Have to do this to prevent default values that are empty arrays and the\n  // likes from updating the state all the time.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const memoDefaultValue = useMemo(() => defaultValue, []);\n  const raw = localStorage.getItem(key);\n  const initialState = raw ? JSON.parse(raw) : memoDefaultValue;\n  const [state, setState] = useState<T>(initialState);\n  useEffect(\n    function readOnMount() {\n      const raw = localStorage.getItem(key);\n      if (raw) setState(JSON.parse(raw));\n      else setState(memoDefaultValue);\n    },\n    [memoDefaultValue, key]\n  );\n  const setStateExternal = useCallback(\n    (value: T) => {\n      setState(value);\n      localStorage.setItem(key, JSON.stringify(value));\n    },\n    [key]\n  );\n  return [state, setStateExternal] as const;\n};\n","import React from \"react\";\nimport { usePersistentState } from \"../hooks/usePersistentState\";\n\nconst default_key = \"EXKD4pinV1LPdlzNNnGWnI4IBh0GvmycfTVMJexP\";\n\nexport const FdcApiContext = React.createContext<{\n  key: string;\n  setKey: (key: string) => void;\n}>({\n  key: default_key,\n  setKey: () => {},\n});\n\nexport const FdcApiKeyProvider: React.FC = (props) => {\n  const [key = \"\", setKey] = usePersistentState<string>(\"API_KEY\", default_key);\n  const value = { key, setKey };\n  return <FdcApiContext.Provider value={value} {...props} />;\n};\n","import {\n  FoodResult,\n  FoodNutrient,\n  SearchFood,\n  SearchNutrient,\n} from \"./fdc/types\";\n\nexport interface HealthyFood {\n  name: string;\n  brand: string;\n  id: number;\n  nutrients: HealthyNutrient[];\n}\n\nexport const searchNutrientToHealthyNutrient = (\n  nutrient: SearchNutrient\n): HealthyNutrient => ({\n  name: nutrient.nutrientName,\n  id: nutrient.nutrientId,\n  value: nutrient.value,\n  unit: nutrient.unitName,\n  group: \"lol\",\n});\n\nexport const searchFoodToHealthyFood = (food: SearchFood): HealthyFood => ({\n  name: food.description,\n  brand: food.brandOwner,\n  id: food.fdcId,\n  nutrients: food.foodNutrients\n    .map(searchNutrientToHealthyNutrient)\n    .filter(nutrientsWeCareAbout)\n    .sort(nutrientOrder),\n});\n\nexport const foodNutrientToHealthyNutrient = (\n  nutrient: FoodNutrient\n): HealthyNutrient => ({\n  name: nutrient.nutrient.name,\n  id: nutrient.nutrient.id,\n  unit: nutrient.nutrient.unitName,\n  value: nutrient.amount,\n  group: nutrients.find((n) => n.fdcId === nutrient.nutrient.id)?.group,\n});\n\nexport const foodResultToHealthyFood = (food: FoodResult): HealthyFood => ({\n  name: food.description,\n  brand: food.brandOwner,\n  id: food.fdcId,\n  nutrients: food.foodNutrients\n    .map(foodNutrientToHealthyNutrient)\n    .filter(nutrientsWeCareAbout)\n    .sort(nutrientOrder),\n});\n\nexport interface Morsel {\n  id: number;\n  amount: number;\n  unit: string;\n}\n\nexport interface Meal {\n  date: string;\n  foods: Morsel[];\n}\n\nexport interface UnitValue {\n  unit: string;\n  value: number;\n}\n\nexport interface HealthyNutrient extends UnitValue {\n  id: number;\n  name: string;\n  group?: string;\n}\n\nexport const nutrientsWeCareAbout = (nutrient: HealthyNutrient): boolean =>\n  nutrientNames.includes(nutrient.name);\n\nexport const nutrientOrder = (a: HealthyNutrient, b: HealthyNutrient): number =>\n  nutrientNames.indexOf(a.name) - nutrientNames.indexOf(b.name);\n\n// export const nutrients = {\n//   2045: { fdcName: \"Proximates\" },\n//   1051: { fdcName: \"Water\" },\n//   1008: { fdcName: \"Energy\" },\n//   // 1062: { fdcName: \"Energy\" },\n//   // 1002: { fdcName: \"Nitrogen\" },\n//   1003: { fdcName: \"Protein\" },\n//   1004: { fdcName: \"Total lipid (fat)\" },\n//   // 1085: { fdcName: \"Total fat (NLEA)\" },\n//   // 1007: { fdcName: \"Ash\" },\n//   2039: { fdcName: \"Carbohydrates\" },\n//   // 1005: { fdcName: \"Carbohydrate, by difference\" },\n//   // 1050: { fdcName: \"Carbohydrate, by summation\" },\n//   1079: { fdcName: \"Fiber, total dietary\" },\n//   // 1082: { fdcName: \"Fiber, soluble\" },\n//   // 1084: { fdcName: \"Fiber, insoluble\" },\n//   1063: { fdcName: \"Sugars, Total NLEA\" },\n//   // 1010: { fdcName: \"Sucrose\" },\n//   // 1011: { fdcName: \"Glucose (dextrose)\" },\n//   // 1012: { fdcName: \"Fructose\" },\n//   // 1013: { fdcName: \"Lactose\" },\n//   // 1014: { fdcName: \"Maltose\" },\n//   // 1075: { fdcName: \"Galactose\" },\n//   1009: { fdcName: \"Starch\" },\n//   // 2043: { fdcName: \"Minerals\" },\n//   1087: { fdcName: \"Calcium, Ca\" },\n//   1089: { fdcName: \"Iron, Fe\" },\n//   1090: { fdcName: \"Magnesium, Mg\" },\n//   1091: { fdcName: \"Phosphorus, P\" },\n//   1092: { fdcName: \"Potassium, K\" },\n//   1093: { fdcName: \"Sodium, Na\" },\n//   1095: { fdcName: \"Zinc, Zn\" },\n//   1098: { fdcName: \"Copper, Cu\" },\n//   1101: { fdcName: \"Manganese, Mn\" },\n//   1103: { fdcName: \"Selenium, Se\" },\n//   // 2046: { fdcName: \"Vitamins and Other Components\" },\n//   1162: { fdcName: \"Vitamin C, total ascorbic acid\" },\n//   1165: { fdcName: \"Thiamin\" },\n//   1166: { fdcName: \"Riboflavin\" },\n//   1167: { fdcName: \"Niacin\" },\n//   1170: { fdcName: \"Pantothenic acid\" },\n//   1175: { fdcName: \"Vitamin B-6\" },\n//   // 1177: { fdcName: \"Folate, total\" },\n//   1106: { fdcName: \"Vitamin A, RAE\" },\n//   1107: { fdcName: \"Carotene, beta\" },\n//   1108: { fdcName: \"Carotene, alpha\" },\n//   // 1120: { fdcName: \"Cryptoxanthin, beta\" },\n//   // 1122: { fdcName: \"Lycopene\" },\n//   // 1123: { fdcName: \"Lutein + zeaxanthin\" },\n//   // 1116: { fdcName: \"Phytoene\" },\n//   // 1117: { fdcName: \"Phytofluene\" },\n//   1109: { fdcName: \"Vitamin E (alpha-tocopherol)\" },\n//   // 1125: { fdcName: \"Tocopherol, beta\" },\n//   // 1126: { fdcName: \"Tocopherol, gamma\" },\n//   // 1127: { fdcName: \"Tocopherol, delta\" },\n//   // 1128: { fdcName: \"Tocotrienol, alpha\" },\n//   // 1129: { fdcName: \"Tocotrienol, beta\" },\n//   // 1130: { fdcName: \"Tocotrienol, gamma\" },\n//   // 1131: { fdcName: \"Tocotrienol, delta\" },\n//   1185: { fdcName: \"Vitamin K (phylloquinone)\" },\n//   // 1184: { fdcName: \"Vitamin K (Dihydrophylloquinone)\" },\n//   // 2044: { fdcName: \"Lipids\" },\n//   1258: { fdcName: \"Fatty acids, total saturated\" },\n//   // 1261: { fdcName: \"8:0\" },\n//   // 1262: { fdcName: \"10:0\" },\n//   // 1263: { fdcName: \"12:0\" },\n//   // 1264: { fdcName: \"14:0\" },\n//   // 1299: { fdcName: \"15:0\" },\n//   // 1265: { fdcName: \"16:0\" },\n//   // 1300: { fdcName: \"17:0\" },\n//   // 1266: { fdcName: \"18:0\" },\n//   // 1267: { fdcName: \"20:0\" },\n//   // 1273: { fdcName: \"22:0\" },\n//   1292: { fdcName: \"Fatty acids, total monounsaturated\" },\n//   // 2009: { fdcName: \"14:1 c\" },\n//   // 1333: { fdcName: \"15:1\" },\n//   // 1314: { fdcName: \"16:1 c\" },\n//   // 1323: { fdcName: \"17:1\" },\n//   // 2010: { fdcName: \"17:1 c\" },\n//   // 1268: { fdcName: \"18:1\" },\n//   // 1315: { fdcName: \"18:1 c\" },\n//   // 1277: { fdcName: \"20:1\" },\n//   // 2012: { fdcName: \"20:1 c\" },\n//   1293: { fdcName: \"Fatty acids, total polyunsaturated\" },\n//   // 1269: { fdcName: \"18:2\" },\n//   // 2016: { fdcName: \"18:2 c\" },\n//   // 1270: { fdcName: \"18:3\" },\n//   // 2018: { fdcName: \"18:3 c\" },\n//   // 1321: { fdcName: \"18:3 n-6 c,c,c\" },\n//   // 2026: { fdcName: \"20:2 c\" },\n//   // 1313: { fdcName: \"20:2 n-6 c,c\" },\n//   // 1325: { fdcName: \"20:3\" },\n//   // 2020: { fdcName: \"20:3 c\" },\n//   // 1271: { fdcName: \"20:4\" },\n//   // 2022: { fdcName: \"20:4 c\" },\n//   // 2042: { fdcName: \"Amino acids\" },\n//   // 1210: { fdcName: \"Tryptophan\" },\n//   // 1211: { fdcName: \"Threonine\" },\n//   // 1212: { fdcName: \"Isoleucine\" },\n//   // 1213: { fdcName: \"Leucine\" },\n//   // 1214: { fdcName: \"Lysine\" },\n// };\n\nexport const nutrients = [\n  { fdcId: 1051, fdcName: \"Water\", group: \"macro\" },\n  { fdcId: 1008, fdcName: \"Energy\", group: \"macro\" },\n  { fdcId: 1003, fdcName: \"Protein\", group: \"macro\" },\n  { fdcId: 1004, fdcName: \"Total lipid (fat)\", group: \"lipid\" },\n  { fdcId: 2039, fdcName: \"Carbohydrates\", group: \"macro\" },\n  { fdcId: 1079, fdcName: \"Fiber, total dietary\", group: \"macro\" },\n  { fdcId: 1063, fdcName: \"Sugars, Total NLEA\", group: \"macro\" },\n  { fdcId: 1087, fdcName: \"Calcium, Ca\", group: \"mineral\" },\n  { fdcId: 1089, fdcName: \"Iron, Fe\", group: \"mineral\" },\n  { fdcId: 1090, fdcName: \"Magnesium, Mg\", group: \"mineral\" },\n  { fdcId: 1091, fdcName: \"Phosphorus, P\", group: \"mineral\" },\n  { fdcId: 1092, fdcName: \"Potassium, K\", group: \"mineral\" },\n  { fdcId: 1093, fdcName: \"Sodium, Na\", group: \"mineral\" },\n  { fdcId: 1095, fdcName: \"Zinc, Zn\", group: \"mineral\" },\n  { fdcId: 1098, fdcName: \"Copper, Cu\", group: \"mineral\" },\n  { fdcId: 1101, fdcName: \"Manganese, Mn\", group: \"mineral\" },\n  { fdcId: 1103, fdcName: \"Selenium, Se\", group: \"mineral\" },\n  {\n    fdcId: 1162,\n    fdcName: \"Vitamin C, total ascorbic acid\",\n    group: \"vitamin\",\n  },\n  { fdcId: 1165, fdcName: \"Thiamin\", group: \"vitamin\" },\n  { fdcId: 1166, fdcName: \"Riboflavin\", group: \"vitamin\" },\n  { fdcId: 1167, fdcName: \"Niacin\", group: \"vitamin\" },\n  { fdcId: 1170, fdcName: \"Pantothenic acid\", group: \"vitamin\" },\n  { fdcId: 1175, fdcName: \"Vitamin B-6\", group: \"vitamin\" },\n  { fdcId: 1106, fdcName: \"Vitamin A, RAE\", group: \"vitamin\" },\n  { fdcId: 1107, fdcName: \"Carotene, beta\", group: \"vitamin\" },\n  { fdcId: 1109, fdcName: \"Vitamin E (alpha-tocopherol)\", group: \"vitamin\" },\n  { fdcId: 1185, fdcName: \"Vitamin K (phylloquinone)\", group: \"vitamin\" },\n  { fdcId: 1258, fdcName: \"Fatty acids, total saturated\", group: \"lipid\" },\n  {\n    fdcId: 1292,\n    fdcName: \"Fatty acids, total monounsaturated\",\n    group: \"lipid\",\n  },\n  {\n    fdcId: 1293,\n    fdcName: \"Fatty acids, total polyunsaturated\",\n    group: \"lipid\",\n  },\n];\n\nexport const nutrientNames = Object.values(nutrients).map(\n  (nutrient) => nutrient.fdcName\n);\n","import { compact, partial } from \"lodash\";\nimport { useContext, useEffect } from \"react\";\nimport useSWR, { useSWRInfinite } from \"swr\";\nimport { FdcApiContext } from \"../../contexts/fdcApiKey\";\nimport { foodResultToHealthyFood } from \"../models\";\nimport { FDAErrorResponse, FoodResult } from \"./types\";\n\nconst getKey = (API_KEY?: string, id?: number) => {\n  if (!API_KEY) return null;\n  if (!id) return null;\n  return `https://api.nal.usda.gov/fdc/v1/food/${id}?api_key=${API_KEY}`;\n};\n\nconst getFoodOrUndefined = (data?: FoodResult | FDAErrorResponse) => {\n  if (!data) return undefined;\n  if (!(\"fdcId\" in data)) return undefined;\n  return data;\n};\n\nconst getErrorOrUndefined = (data?: FoodResult | FDAErrorResponse) => {\n  if (!data) return undefined;\n  if (\"fdcId\" in data) return undefined;\n  return data;\n};\n\nexport const useFood = (id?: number) => {\n  const { key: API_KEY } = useContext(FdcApiContext);\n  const key = getKey(API_KEY, id);\n  const { data, error } = useSWR<FoodResult | FDAErrorResponse>(key);\n  const food = getFoodOrUndefined(data);\n  const healthyFood = food && foodResultToHealthyFood(food);\n  const apiError = getErrorOrUndefined(data);\n  const isLoading = key && !error && !data;\n  return { food: healthyFood, data, apiError, error, isLoading };\n};\n\nexport const useFoods = (ids: number[]) => {\n  const { key: API_KEY } = useContext(FdcApiContext);\n  const keys = ids.map(partial(getKey, API_KEY));\n  const loadKey = (index: number) => keys[index];\n  const { data: responses, error, setSize } = useSWRInfinite<\n    FoodResult | FDAErrorResponse\n  >(loadKey);\n  useEffect(\n    function updateSize() {\n      setSize(ids.length);\n    },\n    [setSize, ids.length]\n  );\n  const foods = compact(responses?.map(getFoodOrUndefined)).map(\n    foodResultToHealthyFood\n  );\n  const errors = compact(responses?.map(getErrorOrUndefined));\n  return { foods, responses, errors, error };\n};\n","import { find, first, groupBy, map } from \"lodash\";\nimport React, { HTMLAttributes } from \"react\";\nimport styled from \"styled-components\";\nimport { useFood, useFoods } from \"../data/fdc/food\";\nimport { Meal as IMeal, Morsel as IMorsel, nutrients } from \"../data/models\";\n\ninterface EatenFoodProps extends HTMLAttributes<HTMLElement> {\n  morsel: IMorsel;\n}\n\nconst Morsel: React.FC<EatenFoodProps> = ({ morsel, ...props }) => {\n  const { food, error } = useFood(morsel.id);\n\n  return (\n    <div {...props}>\n      {error && error.toString()}\n      {!food && !error && \"loading...\"}\n      {food && `${morsel.amount}${morsel.unit} ${food?.name} (${food?.brand})`}\n    </div>\n  );\n};\n\nexport const MorselList = styled.ul`\n  margin: 0;\n  padding: 0;\n  li {\n    list-style: none;\n  }\n`;\n\nexport interface Props extends HTMLAttributes<HTMLElement> {\n  meal: IMeal;\n}\n\nexport const Meal: React.FC<Props> = ({ meal, ...props }) => {\n  const { foods } = useFoods(map(meal.foods, \"id\"));\n  if (!foods) return null;\n  const accumulatedNutrients = nutrients.map((nutrient) => ({\n    name: nutrient.fdcName,\n    value: foods.reduce(\n      (sum, food) =>\n        sum + (find(food.nutrients, { name: nutrient.fdcName })?.value ?? 0),\n      0\n    ),\n    unit: find(first(foods)?.nutrients, { name: nutrient.fdcName })?.unit,\n    group: nutrient.group,\n  }));\n  const groups = groupBy(accumulatedNutrients, \"group\");\n  return (\n    <div {...props}>\n      <h3>{meal.date}</h3>\n      <MorselList>\n        {meal.foods.map((food) => (\n          <li key={food.id}>\n            <Morsel morsel={food} />\n          </li>\n        ))}\n      </MorselList>\n      <table>\n        <thead>\n          <tr>\n            <th>Nutrient</th>\n            <th>Amount</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Object.keys(groups).map((groupKey) => (\n            <React.Fragment key={groupKey}>\n              <h4>{groupKey}</h4>\n              {groups[groupKey].map((nutrient) => (\n                <tr>\n                  <td>{nutrient.name}</td>\n                  <td>\n                    {Math.round(nutrient.value)} {nutrient.unit}\n                  </td>\n                </tr>\n              ))}\n            </React.Fragment>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Page = styled.main.attrs({ id: \"main\" })`\n  padding: 4px;\n`;\n","import React from \"react\";\nimport { Meal } from \"../data/models\";\nimport { usePersistentState } from \"../hooks/usePersistentState\";\n\nexport const MealsContext = React.createContext<{\n  meals: Meal[];\n  setMeals: (meals: Meal[]) => void;\n}>({\n  meals: [],\n  setMeals: () => {},\n});\n\nexport const MealsProvider: React.FC = (props) => {\n  const [meals, setMeals] = usePersistentState<Meal[]>(\"meals\", []);\n  const value = { meals, setMeals };\n  return <MealsContext.Provider value={value} {...props} />;\n};\n","import { orderBy } from \"lodash\";\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Meal } from \"../components/Meal\";\nimport { Page } from \"../components/primitives/Page\";\nimport { MealsContext } from \"../contexts/meals\";\n\nconst IndexControls = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Meals: React.FC = () => {\n  const { meals = [] } = useContext(MealsContext);\n  const sortedMeals = useMemo(() => orderBy(meals, [\"date\"], [\"desc\"]), [\n    meals,\n  ]);\n  const [index, setIndex] = useState<number>(0);\n  useEffect(\n    function resetIndex() {\n      setIndex(0);\n    },\n    [meals]\n  );\n  const hasPrevious = index < sortedMeals.length - 1;\n  const goToPreviousMeal = () => {\n    if (hasPrevious) {\n      setIndex(index + 1);\n    }\n  };\n  const hasNext = index > 0;\n  const goToNextMeal = () => {\n    if (hasNext) {\n      setIndex(index - 1);\n    }\n  };\n  const meal = sortedMeals[index];\n  return (\n    <Page>\n      <h2>Meals</h2>\n      <IndexControls>\n        <button onClick={goToPreviousMeal} disabled={!hasPrevious}>\n          &lt; Prev\n        </button>\n        <button onClick={goToNextMeal} disabled={!hasNext}>\n          Next &gt;\n        </button>\n      </IndexControls>\n      {meal && <Meal meal={meal} />}\n    </Page>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Nav = styled.nav`\n  background-color: #eeeeee;\n  border-top: 1px solid #777777;\n  box-sizing: border-box;\n\n  ul {\n    padding: 0;\n    margin: 0;\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    list-style: none;\n\n    li {\n      margin: 0;\n    }\n\n    li:not(:last-child) {\n      border-right: 1px solid black;\n    }\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  padding: 1rem 0;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Navigation: React.FC = (props) => {\n  return (\n    <Nav {...props}>\n      <ul>\n        <li>\n          <StyledLink to=\"/\">Search</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"/starred\">Starred</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"/meals\">My Meals</StyledLink>\n        </li>\n      </ul>\n    </Nav>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  padding: 0.7em;\n  /* background: linear-gradient(90deg, #ffcdd2 0%, #e1bee7 100%);\n  border: 1px solid #7b1fa2; */\n\n  button + & {\n    margin-left: 4px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Input = styled.input``;\n","import React from \"react\";\nimport BaseModal from \"react-modal\";\nimport styled from \"styled-components\";\n\nBaseModal.setAppElement(\"#root\");\n\nconst StyledModal = styled(BaseModal)`\n  margin: 1rem;\n  background-color: white;\n  border: 1px solid black;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 1rem;\n  border-bottom: 1px solid grey;\n  background-color: lightgrey;\n`;\n\nconst Heading = styled.h1`\n  margin: 0;\n`;\n\nconst Body = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n`;\n\nexport interface Props {\n  title: string;\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n}\n\nexport const Modal: React.FC<Props> = ({\n  isOpen,\n  onClose,\n  title,\n  children,\n}) => (\n  <StyledModal isOpen={isOpen} onRequestClose={onClose} contentLabel={title}>\n    <Header>\n      <Heading>{title}</Heading>\n      <button onClick={onClose}>close</button>\n    </Header>\n    <Body>{children}</Body>\n  </StyledModal>\n);\n","export interface SearchResult {\n  totalHits: number;\n  currentPage: number;\n  totalPages: number;\n  pageList: number[];\n  foodSearchCriteria: FoodSearchCriteria;\n  foods: SearchFood[];\n  aggregations: Aggregations;\n}\n\nexport interface FoodSearchCriteria {\n  query: string;\n  generalSearchInput: string;\n  pageNumber: number;\n  numberOfResultsPerPage: number;\n  pageSize: number;\n  requireAllWords: boolean;\n}\n\nexport enum DataType {\n  BRANDED = \"Branded\",\n  SURVEY = \"Survey (FNDDS)\",\n  LEGACY = \"SR Legacy\",\n  FOUNDATION = \"Foundation\",\n}\n\nexport interface SearchFood {\n  fdcId: number;\n  description: string;\n  lowercaseDescription: string;\n  dataType: DataType;\n  gtinUpc: string;\n  publishedDate: string;\n  brandOwner: string;\n  ingredients: string;\n  allHighlightFields: string;\n  score: number;\n  foodNutrients: SearchNutrient[];\n}\n\nexport interface SearchNutrient {\n  nutrientId: number;\n  nutrientName: string;\n  nutrientNumber: string;\n  unitName: string;\n  derivationCode: string;\n  derivationDescription: string;\n  value: number;\n}\n\nexport interface Aggregations {\n  dataType: {\n    [dataType in DataType]: number;\n  };\n  nutrients: {};\n}\n\nexport interface FDAErrorResponse {\n  error: {\n    code: string;\n    message: string;\n  };\n}\n\nexport interface FoodNutrient {\n  type: \"FoodNutrient\";\n  nutrient: {\n    id: number;\n    number: string;\n    name: string;\n    rank: number;\n    unitName: string;\n  };\n  foodNutrientDerivation: {\n    id: number;\n    code: string;\n    description: string;\n  };\n  id: number;\n  amount: number;\n}\n\ninterface FoodUpdateLog {\n  foodAttributes: any[];\n  fdcId: number;\n  description: string;\n  publicationDate: string;\n  dataType: string;\n  foodClass: string;\n  modifiedDate: string;\n  availableDate: string;\n  brandOwner: string;\n  dataSource: string;\n  brandedFoodCategory: string;\n  gtinUpc: string;\n  householdServingFullText: string;\n  ingredients: string;\n  marketCountry: string;\n  servingSize: number;\n  servingSizeUnit: string;\n}\n\nexport interface FoodResult {\n  foodComponents: any[];\n  foodAttributes: any[];\n  foodPortions: any[];\n  fdcId: number;\n  description: string;\n  publicationDate: string;\n  foodNutrients: FoodNutrient[];\n  dataType: DataType;\n  foodClass: string;\n  modifiedDate: string;\n  availableDate: string;\n  brandOwner: string;\n  dataSource: string;\n  brandedFoodCategory: string;\n  gtinUpc: string;\n  householdServingFullText: string;\n  ingredients: string;\n  marketCountry: string;\n  servingSize: number;\n  servingSizeUnit: string;\n  foodUpdateLog: FoodUpdateLog[];\n  labelNutrients: Record<string, { value: number }>;\n}\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { useFood } from \"../data/fdc/food\";\nimport { Button } from \"./primitives/Button\";\nimport { Input } from \"./primitives/Input\";\nimport { Modal } from \"./primitives/Modal\";\nimport moment from \"moment\";\nimport { MealsContext } from \"../contexts/meals\";\nimport { findIndex } from \"lodash\";\nimport { arraySet } from \"../helpers\";\nimport styled from \"styled-components\";\nimport { useAlert } from \"react-alert\";\n\nconst Step = styled.div`\n  :not(:first-child) {\n    margin-top: 8px;\n  }\n`;\n\nexport const AddToMeal: React.FC<{ id: number; onDone: () => void }> = ({\n  id,\n  onDone,\n}) => {\n  const { food, error } = useFood(id);\n  const [amount, setAmount] = useState<number>(100);\n  const [date, setDate] = useState<string>(moment().format(\"YYYY-MM-DD\"));\n  const { meals, setMeals } = useContext(MealsContext);\n  const reset = () => {\n    setAmount(100);\n  };\n  useEffect(function setUpReset() {\n    reset();\n    return reset;\n  }, []);\n  const alert = useAlert();\n  const addFoodToMeal = (id: number, amount: number, date: string) => {\n    const existingMealIndex = findIndex(meals || [], { date });\n    const newFood = { id, amount, unit: \"g\" };\n    console.log({ existingMealIndex });\n    if (existingMealIndex === -1) {\n      setMeals([\n        ...(meals || []),\n        {\n          date,\n          foods: [newFood],\n        },\n      ]);\n    } else {\n      const existingMeal = meals[existingMealIndex];\n      setMeals(\n        arraySet(meals, existingMealIndex, {\n          ...existingMeal,\n          foods: [...existingMeal.foods, newFood],\n        })\n      );\n    }\n  };\n  const submit: React.FormEventHandler<HTMLFormElement> = (e) => {\n    e.preventDefault();\n    addFoodToMeal(id, amount, date);\n    alert.success(\"You did it!!!\");\n    onDone();\n  };\n\n  return (\n    <form onSubmit={submit}>\n      {error && <code>{JSON.stringify(error)}</code>}\n      {!food && \"loading...\"}\n      <Step>\n        <label>\n          Which meal?\n          <Input\n            type=\"date\"\n            onChange={(e) => setDate(e.target.value)}\n            value={date}\n          />\n        </label>\n      </Step>\n      <Step>\n        <label>\n          How Much {food?.name}?\n          <Input\n            type=\"number\"\n            onChange={(e) => setAmount(Number(e.target.value))}\n            value={amount}\n          />\n        </label>\n      </Step>\n      <Step>\n        <Button\n          onClick={() => {\n            onDone();\n          }}\n        >\n          Cancel\n        </Button>\n        <Button type=\"submit\">Do it baby!</Button>\n      </Step>\n    </form>\n  );\n};\n\nexport const AddToMealModal: React.FC<{\n  id: number;\n  isOpen: boolean;\n  onClose: () => void;\n}> = ({ id, isOpen, onClose }) => {\n  return (\n    <Modal isOpen={isOpen} onClose={onClose} title=\"Add Food To Meal\">\n      <AddToMeal id={id} onDone={onClose} />\n    </Modal>\n  );\n};\n","// import React from \"react\";\n\nexport const arraySet = (array: any[], index: number, value: any) =>\n  Object.assign([...array], { [index]: value });\n\n// export const withProp = <P extends object>(\n//   WrappedComponent: React.ComponentType<P>,\n//   key: string,\n//   value: any\n// ): React.FC<P> => {\n//   const prop = { [key]: value };\n//   const Wrapped = props => {\n//     return <WrappedComponent foo=  };\n//   return Wrapped;\n// };\n","import styled from \"styled-components\";\nimport { Button } from \"./Button\";\n\nexport const LinkButton = styled(Button)`\n  text-align: left;\n  padding: 0;\n  margin: 0;\n  background: transparent;\n  border: none;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { HealthyFood } from \"../data/models\";\nimport { LinkButton } from \"./primitives/LinkButton\";\n\nexport interface Props {\n  food: HealthyFood;\n  actions: React.ReactNode;\n  onClick?: () => void;\n}\n\nconst Container = styled.div`\n  max-width: 400px;\n`;\n\nconst FirstRow = styled.div`\n  display: grid;\n  grid-template-columns: 1fr auto;\n  align-items: center;\n  margin-bottom: 4px;\n`;\n\nconst Details = styled(LinkButton)`\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst Actions = styled.div`\n  /* justify-content: center; */\n  display: flex;\n  align-items: center;\n`;\n\n// const NutrientList = styled.ul`\n//   margin: 0;\n//   padding: 0;\n//   li {\n//     list-style: none;\n//   }\n// `;\n\nexport const Food: React.FC<Props> = ({ food, actions, onClick, ...props }) => {\n  return (\n    <Container {...props}>\n      <FirstRow>\n        <Details onClick={onClick}>\n          {food.name} {food.brand && `(${food.brand})`}\n        </Details>\n        <Actions>{actions}</Actions>\n      </FirstRow>\n      {/* <NutrientList>\n        {food.nutrients.map((nutrient) => (\n          <li>\n            {nutrient.name}:{\" \"}\n            {nutrient.value ? `${nutrient.value}${nutrient.unit}` : \"unknown\"}\n          </li>\n        ))}\n      </NutrientList> */}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { usePersistentState } from \"../hooks/usePersistentState\";\n\nexport const StarredContext = React.createContext<{\n  starred: number[];\n  setStarred: (starred: number[]) => void;\n}>({\n  starred: [],\n  setStarred: () => {},\n});\n\nexport const StarredProvider: React.FC = (props) => {\n  const [starred = [], setStarred] = usePersistentState<number[]>(\n    \"starred\",\n    []\n  );\n  const value = { starred, setStarred };\n  return <StarredContext.Provider value={value} {...props} />;\n};\n","// https://fdc.nal.usda.gov/api-spec/fdc_api.html\n\nimport useSWR from \"swr\";\nimport { DataType, FDAErrorResponse, SearchResult } from \"./types\";\n\nconst API_KEY = \"EXKD4pinV1LPdlzNNnGWnI4IBh0GvmycfTVMJexP\";\n\nconst getKey = (query?: string, dataTypes?: DataType[]) => {\n  if (!query || query.trim().length === 0) return null;\n  if (!dataTypes || dataTypes.length === 0) return null;\n  return `https://api.nal.usda.gov/fdc/v1/foods/search?api_key=${API_KEY}&query=${encodeURIComponent(\n    query.trim()\n  )}&dataType=${encodeURIComponent(dataTypes.join(\",\"))}`;\n};\n\nexport const useSearch = (query?: string, dataTypes?: DataType[]) => {\n  const { data, error } = useSWR<SearchResult, FDAErrorResponse>(\n    getKey(query, dataTypes)\n  );\n  return { data, error };\n};\n","import { useState, useEffect } from \"react\";\n\nexport const useDebounce = <T>(value: T, timeout: number = 50) => {\n  const [state, setState] = useState<T>(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => setState(value), timeout);\n\n    return () => clearTimeout(handler);\n  }, [value, timeout]);\n\n  return state;\n};\n","import { useCallback } from \"react\";\nimport { MdStar, MdStarBorder } from \"react-icons/md\";\nimport styled from \"styled-components\";\nimport { LinkButton } from \"./primitives/LinkButton\";\n\nexport const StyledStarButton = styled(LinkButton)`\n  font-size: 1.5rem;\n  line-height: 1;\n  color: #ffeb3b;\n`;\n\nexport interface Props {\n  isStarred: boolean;\n  setIsStarred: (isStarred: boolean) => void;\n}\n\nexport const StarButton: React.FC<Props> = ({\n  isStarred,\n  setIsStarred,\n  ...props\n}) => {\n  const toggle = useCallback(() => setIsStarred(!isStarred), [\n    isStarred,\n    setIsStarred,\n  ]);\n  return (\n    <StyledStarButton\n      aria-label=\"Star\"\n      aria-pressed={isStarred}\n      onClick={toggle}\n      {...props}\n    >\n      {isStarred ? <MdStar /> : <MdStarBorder />}\n    </StyledStarButton>\n  );\n};\n","const Colors = {\n  red500: \"#f44336\",\n  amber500: \"#ffc107\",\n  yellow500: \"#ffeb3b\",\n  deepOrange500: \"#ff5722\",\n  lightBlue500: \"#03a9f4\",\n  lightGreen500: \"#8bc34a\",\n  pink500: \"#e91e63\",\n  lightGrey: \"#BDBDBD\",\n};\n\nconst ColorRoles = {\n  primary: Colors.pink500,\n  onPrimary: \"black\",\n  secondary: Colors.yellow500,\n  onSecondary: \"black\",\n};\n\nexport const Color = {\n  surface: \"white\",\n  onSurface: \"black\",\n  critical: Colors.red500,\n  onCritical: \"black\",\n  warning: Colors.amber500,\n  onWarning: \"black\",\n  success: Colors.lightGreen500,\n  onSuccess: \"black\",\n  highlight: \"\",\n  interactive: ColorRoles.secondary,\n  onInteractive: ColorRoles.onSecondary,\n  actionPrimary: ColorRoles.primary,\n  border: Colors.lightGrey,\n};\n","import { uniq, without } from \"lodash\";\nimport React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { AddToMealModal } from \"../components/AddToMeal\";\nimport { Food as BaseFood } from \"../components/Food\";\nimport { Input } from \"../components/primitives/Input\";\nimport { Page } from \"../components/primitives/Page\";\nimport { StarredContext } from \"../contexts/starred\";\nimport { useSearch } from \"../data/fdc/search\";\nimport { DataType } from \"../data/fdc/types\";\nimport { searchFoodToHealthyFood } from \"../data/models\";\nimport { usePersistentState } from \"../hooks/usePersistentState\";\nimport { useDebounce } from \"../hooks/useDebounce\";\nimport { StarButton } from \"../components/StarButton\";\nimport { Color } from \"../styles\";\n\nexport const SearchBar = styled(Input).attrs({ type: \"text\" })`\n  box-sizing: border-box;\n  width: 100%;\n  font-size: 1rem;\n  padding: 0.5rem;\n`;\n\nexport const SearchResults = styled.ul`\n  padding: 0;\n  margin: 0;\n  margin-top: 1rem;\n  display: grid;\n  gap: 1rem;\n  li {\n    list-style: none;\n  }\n`;\n\nexport const Sources = styled.div`\n  margin-top: 8px;\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  grid-template-columns: 1fr 1fr;\n`;\n\nconst Food = styled(BaseFood)`\n  border-bottom: 1px solid ${Color.border};\n`;\n\nexport const Search: React.FC = () => {\n  const [query, setQuery] = usePersistentState<string>(\"searchQuery\", \"\");\n  const debouncedQuery = useDebounce<string | undefined>(query);\n  const [dataTypes, setDataTypes] = usePersistentState<DataType[]>(\n    \"dataTypes\",\n    [DataType.FOUNDATION]\n  );\n  const { data, error } = useSearch(debouncedQuery, dataTypes);\n  const foods = data?.foods?.map(searchFoodToHealthyFood) || [];\n  const { starred, setStarred } = useContext(StarredContext);\n  const selectDataType = (dataType: DataType) => {\n    setDataTypes(uniq([...dataTypes, dataType]));\n  };\n  const unselectDataType = (dataType: DataType) =>\n    setDataTypes(without(dataTypes, dataType));\n\n  const [selectedFood, setSelectedFood] = useState<number>();\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const openModal = (id: number) => {\n    setSelectedFood(id);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedFood(undefined);\n  };\n\n  return (\n    <Page>\n      {selectedFood && (\n        <AddToMealModal\n          id={selectedFood}\n          isOpen={isModalOpen}\n          onClose={closeModal}\n        />\n      )}\n      <SearchBar\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Search For Food\"\n      />\n      <Sources>\n        {Object.values(DataType).map((dataType) => (\n          <label\n            style={{\n              marginRight: \"10px\",\n            }}\n          >\n            <input\n              type=\"checkbox\"\n              key={dataType}\n              name={dataType}\n              defaultChecked={dataTypes.includes(dataType)}\n              onChange={(e) =>\n                (e.target.checked ? selectDataType : unselectDataType)(dataType)\n              }\n            />\n            {dataType}\n          </label>\n        ))}\n      </Sources>\n      <SearchResults>\n        {foods.map((food) => (\n          <li key={food.id}>\n            <Food\n              food={food}\n              onClick={() => openModal(food.id)}\n              actions={\n                <>\n                  <StarButton\n                    isStarred={starred?.includes(food.id)}\n                    setIsStarred={(isStarred: boolean) =>\n                      isStarred\n                        ? setStarred([...(starred || []), food.id])\n                        : setStarred(without(starred, food.id))\n                    }\n                  />\n                  {/* <Button >Log</Button> */}\n                </>\n              }\n            />\n          </li>\n        ))}\n      </SearchResults>\n      <pre>\n        <code>{JSON.stringify(error, null, 2)}</code>\n      </pre>\n    </Page>\n  );\n};\n","import { uniq, without } from \"lodash\";\nimport React, { useContext } from \"react\";\nimport { Food } from \"../components/Food\";\nimport { StarredContext } from \"../contexts/starred\";\nimport { useFood } from \"../data/fdc/food\";\nimport { usePersistentState } from \"../hooks/usePersistentState\";\n\ninterface ItemProps {\n  id: number;\n}\n\nconst Item: React.FC<ItemProps> = ({ id }) => {\n  const { food, error } = useFood(id);\n  const { starred, setStarred } = useContext(StarredContext);\n  const loading = !food && !error;\n  const isStarred = starred?.includes(id);\n  const star = () => setStarred(uniq([...(starred || []), id]));\n  const unstar = () => setStarred(without(starred, id));\n  return (\n    <>\n      {loading && <span>Loading...</span>}\n      {food && (\n        <Food\n          food={food}\n          actions={\n            <>\n              <button onClick={isStarred ? unstar : star}>\n                {isStarred ? \"Unstar\" : \"Star\"}\n              </button>\n            </>\n          }\n        />\n      )}\n      {JSON.stringify(error)}\n    </>\n  );\n};\n\nexport const Starred: React.FC = () => {\n  const [starred, setStarred] = usePersistentState<number[]>(\"starred\", []);\n  return (\n    <>\n      <ul>\n        {(starred || []).map((id) => (\n          <li key={id}>\n            <Item id={id} />\n          </li>\n        ))}\n      </ul>\n      <button onClick={() => setStarred([])}>Clear Starred Items</button>\n    </>\n  );\n};\n","import { useContext } from \"react\";\nimport { Input } from \"../components/primitives/Input\";\nimport { Page } from \"../components/primitives/Page\";\nimport { FdcApiContext } from \"../contexts/fdcApiKey\";\nimport { useFood } from \"../data/fdc/food\";\nimport styled from \"styled-components\";\n\nexport const ApiStatus = styled.span`\n  margin-left: 4px;\n  &[data-status=\"loading\"] {\n    color: blue;\n  }\n  &[data-status=\"valid\"] {\n    color: green;\n  }\n  &[data-status=\"invalid\"] {\n    color: red;\n  }\n`;\n\nexport const Settings: React.FC = (props) => {\n  const { key, setKey } = useContext(FdcApiContext);\n  const { food, apiError, error, isLoading } = useFood(747447);\n  const isValid = Boolean(food);\n  const isInvalid = Boolean(apiError || error);\n  return (\n    <Page {...props}>\n      <h2>Settings</h2>\n      <p>You can change some settings here :)</p>\n\n      <h3>\n        <label htmlFor=\"apiKey\">API Key</label>\n      </h3>\n      <p>\n        This app comes with a default API key. If that one ever gets invalidated\n        or starts hitting the rate-limit too often, you can request your own\n        from the FDA website and paste it below.\n      </p>\n      <Input\n        id=\"apiKey\"\n        type=\"text\"\n        value={key}\n        onChange={(e) => setKey(e.target.value)}\n      />\n      <ApiStatus\n        data-status={\n          (isLoading && \"loading\") ||\n          (isValid && \"valid\") ||\n          (isInvalid && \"invalid\")\n        }\n      >\n        {isLoading && \"loading...\"}\n        {food && \"✔️ valid\"}\n        {isInvalid && \"❌ invalid\"}\n      </ApiStatus>\n    </Page>\n  );\n};\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledTopBar = styled.nav`\n  color: white;\n  background-color: salmon;\n  border-bottom: 1px solid violet;\n\n  width: 100%;\n  padding: 4px;\n  box-sizing: border-box;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n\n  a {\n    color: white;\n  }\n`;\n\nexport const TopBar: React.FC = (props) => {\n  return (\n    <StyledTopBar {...props}>\n      <Link to=\"/\">\n        <h1>Healthy</h1>\n      </Link>\n      <div>\n        <Link to=\"/settings\">Settings</Link>\n      </div>\n    </StyledTopBar>\n  );\n};\n","import { Page } from \"../components/primitives/Page\";\n\nexport const Debug: React.FC = ({ ...props }) => {\n  return (\n    <Page {...props}>\n      <pre>\n        <code>{JSON.stringify(process.env, null, 2)}</code>\n      </pre>\n    </Page>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Meals } from \"./pages/Meals\";\nimport { Navigation as BaseNavigation } from \"./pages/Navigation\";\nimport { Search } from \"./pages/Search\";\nimport { Starred } from \"./pages/Starred\";\nimport { Settings } from \"./pages/Settings\";\nimport { TopBar } from \"./pages/TopBar\";\nimport styled from \"styled-components\";\nimport { Debug } from \"./pages/Debug\";\n\nconst SkipMain = styled.a`\n  left: -999px;\n  position: absolute;\n  top: auto;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  z-index: -999;\n  &:focus,\n  &:active {\n    color: #fff;\n    background-color: #000;\n    left: auto;\n    top: auto;\n    width: 30%;\n    height: auto;\n    overflow: auto;\n    margin: 10px 35%;\n    padding: 5px;\n    border-radius: 15px;\n    border: 4px solid yellow;\n    text-align: center;\n    font-size: 1.2em;\n    z-index: 999;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport const Navigation = styled(BaseNavigation)`\n  order: 1;\n`;\n\nexport const TopAndMain = styled.div`\n  flex-grow: 1;\n  overflow: auto;\n`;\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <SkipMain href=\"#main\">Jump to Main Content</SkipMain>\n      <Container>\n        <Navigation />\n        <TopAndMain>\n          <TopBar />\n          <Switch>\n            <Route path=\"/\" exact={true}>\n              <Search />\n            </Route>\n            <Route path=\"/starred\">\n              <Starred />\n            </Route>\n            <Route path=\"/meals\">\n              <Meals />\n            </Route>\n            <Route path=\"/settings\">\n              <Settings />\n            </Route>\n            <Route path=\"/debug\">\n              <Debug />\n            </Route>\n          </Switch>\n        </TopAndMain>\n      </Container>\n    </>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SWRConfig } from \"swr\";\n\nconst fetcher = (resource: RequestInfo, init?: RequestInit) =>\n  fetch(resource, init).then((res) => res.json());\n\nexport const SWRProvider: React.FC = ({ children }) => (\n  <SWRConfig\n    value={{\n      refreshInterval: 0,\n      // revalidateOnMount: false,\n      revalidateOnFocus: false,\n      dedupingInterval: 1000 * 60 * 10,\n      fetcher,\n    }}\n  >\n    {children}\n  </SWRConfig>\n);\n\nexport const multiFetcher = (resources: RequestInfo[]) =>\n  Promise.all(resources.map((resource) => fetcher(resource)));\n","import { transitions, positions, Provider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\n// optional configuration\nconst options = {\n  // you can also just use 'bottom center'\n  position: positions.BOTTOM_CENTER,\n  timeout: 5000,\n  offset: \"30px\",\n  // you can also just use 'scale'\n  transition: transitions.SCALE,\n};\n\nexport const AlertProvider: React.FC = (props) => (\n  <Provider {...props} template={AlertTemplate} {...options} />\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { SWRProvider } from \"./config/swr\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { StarredProvider } from \"./contexts/starred\";\nimport { MealsProvider } from \"./contexts/meals\";\nimport { FdcApiKeyProvider } from \"./contexts/fdcApiKey\";\nimport { AlertProvider } from \"./contexts/alerts\";\n\nconst basename = process.env.NODE_ENV === \"production\" ? \"/healthy\" : \"\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SWRProvider>\n      <AlertProvider>\n        <FdcApiKeyProvider>\n          <StarredProvider>\n            <MealsProvider>\n              <Router basename={basename}>\n                <App />\n              </Router>\n            </MealsProvider>\n          </StarredProvider>\n        </FdcApiKeyProvider>\n      </AlertProvider>\n    </SWRProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}